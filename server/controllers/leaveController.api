var express = require("express"),
 router = express.Router(),
 leaveDAO = require("../models/leaveDAO.js");

  const log4js = require('log4js');
  const logger = log4js.getLogger('demandcapacity');
 
router.get("/", function(req, res) {

 leaveDAO.count({}, function(err, data) {
 if (err) {
 logger.error('Error while data count fetching from leaveDAO 1='+err);
 res.send("error");
 return;
 }
 if(data == 0){
    res.send("");
 }else{   
   leaveDAO.find({},null, {sort:{resourcename: 1}}, function(err, data) {
	if (err) {
	 	logger.error('Error while data fetching from leaveDAO ='+err);
	 	res.send("error");
	 	return;
	}
	 	res.send(data);
	});
 }
 
});
 
}).get("/:id", function(req, res) {
 var id = req.params.id;
 leaveDAO.find({ _id: id }, function(err, data) {
 if (err) {
 logger.error('Error while data fetching from leaveDAO for ID='+err);
 res.send("error");
 return;
 }
 res.send(data[0]);
 });
}).get("/kin/:resourcename", function(req, res) {
	 var name = req.params.resourcename;
	leaveDAO.count({}, function(err, data) {
 	if (err) {
 		res.send("error");
 		return;
 	}
	 console.log(data);
 	if(data == 0){
   		 res.send("");
 	}else{
	   	leaveDAO.count({resourcename: name }, function(err, data) {
		if (err) {
			res.send("error");
		 	return;
		 }
			 if(data === 0){
				  res.send("");
			 }
			 leaveDAO.find({resourcename: name }, function(err, data) {
				if (err) {
					res.send("error");
					return;
				}
					res.send(data);
				});
		});
	}
 });
 }).post("/", function(req, res) {
 var obj = req.body;
 var model = new leaveDAO(obj);
 model.save(function(err) {
 if (err) {
 console.log(err);
 res.send("error");
 return;
 }
 res.send("created");
 });
}).put("/:id", function(req, res) {
 var id = req.params.id;
 var obj = req.body;
 //For date filed dont use findByIdAndUpdate. previous date is stored in that case. else use in all case. 

 leaveDAO.find({ _id: id }, function(err, data) {
 if (err) {
 res.send("error");
 return;
 }
 var model = data[0];
 model.resourcename = obj.resourcename;
 model.locationname = obj.locationname;
 model.fromDate = obj.fromDate;
 model.toDate = obj.toDate;
 model.numberOfLeaves = obj.numberOfLeaves;
 model.leavedaysinmonth = obj.leavedaysinmonth;
 model.save();
 res.send("updated");
 });

}).delete("/:id", function(req, res) {
 var id = req.params.id;
 leaveDAO.findByIdAndRemove(id, function(err) {
 if (err) {
 logger.error('Error while data deletion from leaveDAO ='+err);
 res.send("error");
 return;
 }
 res.send("deleted");
 });
});
 
module.exports = router;


