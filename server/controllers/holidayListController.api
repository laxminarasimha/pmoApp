var express = require("express"),
router = express.Router(),
holidayListDAO = require("../models/holidayListDAO.js");

router.get("/", function(req, res) {
holidayListDAO.count({}, function(err, data) {
if (err) {
res.send("error");
return;
}
if(data == 0){
    res.send("");
}else{
   holidayListDAO.find({},null, {sort:{ locationname: 1}}, function(err, data) {
                if (err) {
                res.send("error");
                return;
                }
                res.send(data);
                });
                }
});
}).get("/:id", function(req, res) {
var id = req.params.id;
holidayListDAO.find({ _id: id }, function(err, data) {
if (err) {
res.send("error");
return;
}
res.send(data[0]);
});
}).get("/location/:locationname", function(req, res) {
var loc = req.params.locationname;
holidayListDAO.count({}, function(err, data) {
if (err) {
res.send("error");
return;
}
if(data == 0){
    res.send("");
}else{
    holidayListDAO.find({ locationname: loc }, function(err, data) {
        if (err) {
            res.send("error");
                return;
            	}
                res.send(data);
                });
                }
});
}).get("/aggegrate/:location", function(req, res) {
var loc = req.params.location;
holidayListDAO.aggregate([
                           {$match : {locationname: loc}},
                           {$group:{_id:{ locationname: "$locationname" , year : { $year : "$holidayDate" },
                                     month : { $month : "$holidayDate" }},number:{$sum:1}}},
                           {$sort: {_id:1}}

                          ], function(err, data) {
                                if (err) {
                                 res.send("error");
                                	return;
                                	}
								res.send(data);
                     });
}).get("/aggegrate/byyear/:year", function(req, res) {
//var loc = req.params.location;
  var yr = req.params.year;

  holidayListDAO.find({ year: { $gte: yr }}, function(err, data) {
                    if (err) {
                		res.send("error");
                        return;
                    }
					res.send(data);
});
}).get("/aggegrate/byyear/range/:startYear/:endYear", function(req, res) {
//var loc = req.params.location;
  var stYr = req.params.startYear;
  var enYr = req.params.endYear;

  holidayListDAO.find({ year: { $gte: stYr ,$lte:enYr}}, function(err, data) {
        if (err) {
                	res.send("error");
                	return;
                 }
			res.send(data);
      });
}).post("/", function(req, res) {
var obj = req.body;
var model = new holidayListDAO(obj);
model.save(function(err) {
if (err) {
console.log(err);
res.send("error");
return;
}
res.send("created");
});
}).put("/:id", function(req, res) {
var id = req.params.id;
var obj = req.body;

 //For date filed dont use findByIdAndUpdate. previous date is stored in that case. else use in all case. 

holidayListDAO.find({ _id: id }, function(err, data) {
if (err) {
res.send("error");
return;
}
var model = data[0];
model.locationname = obj.locationname;
model.holidayDate = obj.holidayDate;
model.comments = obj.comments;
model.year = obj.year;
model.save();
res.send("updated");
});

}).delete("/:id", function(req, res) {
var id = req.params.id;
holidayListDAO.findByIdAndRemove(id, function(err) {
if (err) {
res.send("error");
return;
}
res.send("deleted");
});
});

module.exports = router;
